# Docker Compose configuration for SnazzyAI development environment
# Supports Ubuntu 22.04 & 24.04 with identical tooling and hot reload
# Usage: docker compose up --build

version: "3.8"

services:
  # Backend - Django API server
  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    ports:
      - "8000:8000"
    volumes:
      # Bind mount for hot reload
      - ./backend:/app/backend
      # Named volume for pip cache (optional performance improvement)
      - pip_cache:/home/appuser/.cache/pip
    environment:
      # Load environment variables from both .env files
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=backend.settings
    env_file:
      - .env
      - backend/.env
    user: "${UID:-1000}:${GID:-1000}"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Frontend - React Native/Expo development server
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    ports:
      # Minimal port exposure for mobile device Metro bundling
      - "8081:8081"     # Metro bundler (React Native)
      # Advanced/optional ports (DevTools, web) available via a future profile if needed
    volumes:
      # Bind mount project root for hot reload
      - .:/app
      # Named volume for node_modules to avoid host/container OS drift
      - node_modules:/app/node_modules
    environment:
      # Backend URL for service-to-service communication
      - EXPO_PUBLIC_BACKEND_URL=http://backend:8000
      # Hot reload configuration for containers
      - CHOKIDAR_USEPOLLING=1
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - EXPO_USE_DEV_SERVER=1
      - EXPO_NO_TUNNELING=1
      # Pass through existing API keys from .env
      - EXPO_PUBLIC_OPENAI_API_KEY=${EXPO_PUBLIC_OPENAI_API_KEY}
    env_file:
      - .env
    depends_on:
      - backend
    user: "${UID:-1000}:${GID:-1000}"
    healthcheck:
      test: ["CMD-SHELL", "bash scripts/docker/frontend-health.sh"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 180s

  # Optional: ngrok for mobile device testing
  # Exposes backend to the internet for testing on physical devices
  ngrok:
    image: ngrok/ngrok:latest
    command: http backend:8000
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    depends_on:
      - backend
    profiles:
      # Use profile to make this service optional
      # Enable with: docker compose --profile mobile up
      - mobile
    restart: unless-stopped

# Named volumes to prevent host/container OS conflicts
volumes:
  # Keep node_modules inside container for stability across Ubuntu versions
  node_modules:
    driver: local
  # Optional: pip cache for faster backend rebuilds
  pip_cache:
    driver: local

# Default network for service-to-service communication
networks:
  default:
    driver: bridge